{"version":3,"sources":["api/api.js","assets/images/preload_t.svg","components/Preloader/Preloader.js","components/Sidebar/Sidebar.module.css","components/Header/Header.module.css","components/Content/ProfileInfo/ProfileStatus.module.css","components/Login/Login.module.css","components/Sidebar/Friends/Friends.module.css","components/Content/MyPosts/Post/Post.module.css","components/Redirect/withAuthRedirectComponent.js","redux/dialogsReducer.js","redux/usersReducer.js","App.module.css","components/Footer/Footer.module.css","components/Content/Content.module.css","components/Content/MyPosts/MyPosts.module.css","components/Content/ProfileInfo/ProfileInfo.module.css","reportWebVitals.js","components/Footer/Footer.js","components/Sidebar/Friends/Friends.js","components/Sidebar/Menu/Menu.js","components/Sidebar/Sidebar.js","components/Music/Music.js","components/News/News.js","redux/profileReducer.js","components/Content/MyPosts/MyPostsFieldForm.js","components/Content/MyPosts/Post/Post.js","components/Content/MyPosts/MyPosts.js","components/Content/MyPosts/MyPosts_Container.js","components/Content/ProfileInfo/ProfileStatus.js","components/Content/ProfileInfo/ProfileStatusHook.js","components/Content/ProfileInfo/ProfileInfo.js","components/Content/Content.js","components/Content/Content_Container.js","components/Header/Header.js","redux/authReducer.js","components/Header/Header_Container.js","components/Login/Login.js","redux/appReducer.js","redux/sidebarReducer.js","redux/redux_store.js","App.js","index.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersApi","getUsers","currentPage","pageSize","get","then","response","data","getSubscription","id","post","resultCode","deleteSubscription","delete","getUserProfile","userId","console","log","profileAPI","getUserStatus","updateUserStatus","status","put","authAPI","getLoginData","loginAPI","signInData","email","login","password","rememberMe","remember_me","signOutData","Preloader","props","src","preloader","style","display","margin","width","module","exports","mapStateToProps","state","isAuthorized","auth","isAuth","withAuthRedirectComponent","Component","RedirectComponent","this","to","React","connect","add_message","initialState","dialog","name","messag","mess","sendMessage","message","dispatch","type","actioncreatorAddMessage","dialogsReducer","action","updatedTextArea","FOLLOW","UNFOLLOW","SETUSERS","SETCURRENTPAGE","SETTOTALPAGESCOUNT","TOGGLEISLOADING","SUBSCRIPTIONPROCESSED","users","totalUsersCount","isLoading","subscriptionProcessed","toggleIsLoading","isloading","subscriptionIsBeingProcessed","being_processed","setCurrentPageUsers","setTotalUsersCount","a","items","totalCount","unsubscribe","userID","subscribe","usersReducer","map","u","followed","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","className","c","footer","Friends","friendsdata","friends","f","s","imageClass","sidebar_friends","friendsblock","Menu","sidebardata","sidebar","item","path","activeClassName","activeLink","Sidebar","sidebarPage","sideb","Music","News","add_post","SET_USER_PROFILE","TOGGLE_LOADING","UPDATE_USER_STATUS","SET_USER_STATUS","DELETE_POST","posts","profile","isFetching","updatingUserStatus","profileReducer","new_post","MyPostsFieldForm","onSubmit","values","onSubmitForm","keepDirtyOnReinitialize","validate","errors","render","handleSubmit","form","event","promise","setConfig","reset","input","meta","placeholder","value","MyPostsFieldFormContainer","addNewPost","Post","postitem","MyPosts","memo","postdata","profilePage","p","content","MyPostsContainer","ProfileStatus","editMode","setState","e","charCode","keyCode","deactivateEditMode","target","prevProps","prevState","snapshot","main","onChange","updateInputArea","bind","autoFocus","onKeyPress","handleKey","onBlur","maxlength","onDoubleClick","activateEditMode","ProfileStatusWithHook","useState","setEditMode","setStatus","useEffect","ProfileInfo","fullName","title","alt","photos","small","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","Content","store","Content_Container","match","params","authorized_userId","getCurrentUserStatus","compose","withRouter","Header","header","block1","block2","onClick","singOutLogin","linkstyle","SETUSERSTATE","TOGGLELOGINLOADING","SIGN_ME_IN","LOGIN_FAILED","login_failed","setAuthUserData","payload","toggleIsLoadingLogin","singInProcessCheck","authReducer","loginId","Header_Container","alert","LoginForm","submitting","pristine","transparent","form_inner","failed_sing_in","error","touched","component","singInLogin","from","INITILIZATION_SUCCESFULL","initialized","sidebarReducer","reducers","combineReducers","messagesPage","usersPage","appMain","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","Dialogs_Container","lazy","UsersApiComponent","App","componentDidMount","initialization_App","initialized_app","fallback","AppContainer","Promise","all","SocialNetworkApp","rerenderEntireTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.780ff649.chunk.js","sourcesContent":["\r\nimport * as axios from 'axios'; \r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"e8349719-ae81-4d3f-972e-206990f2d8c6\"\r\n    }\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers (currentPage, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {return response.data})\r\n        },\r\n\r\n    getSubscription (id) {\r\n        return instance.post(`follow/${id}`).then(response => {return response.data.resultCode})\r\n    },\r\n\r\n    deleteSubscription (id) {\r\n\r\n        return instance.delete(`follow/${id}`).then(response => {return response.data.resultCode})\r\n    },\r\n\r\n    getUserProfile (userId) {\r\n     \r\n        console.log(\"Obsolete API. Use profileAPI.getUserProfile instead\");\r\n        return profileAPI.getUserProfile(userId);\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile (userId) {\r\n\r\n        return instance.get(`profile/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getUserStatus (userId) {\r\n        return instance.get(`/profile/status/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    updateUserStatus (status) {\r\n        return instance.put(`/profile/status`, {status: status}).then(response => {\r\n                    return response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const authAPI = {\r\n    getLoginData () {\r\n       \r\n        return instance.get(\"auth/me\").then(response => {\r\n   \r\n            return response}); }\r\n\r\n}\r\n\r\nexport const loginAPI = {\r\n    signInData (data) {\r\n\r\n        return instance.post(`auth/login`, {\r\n            email: data.login,\r\n            password: data.password,\r\n            rememberMe: data.remember_me[0]\r\n        }).then(response => {return response})\r\n    },\r\n\r\n    signOutData () {\r\n        return instance.delete(`auth/login`).then(response => {return response});\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/preload_t.dff2016a.svg\";","import React from 'react'; \r\nimport preloader from './../../assets/images/preload_t.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div><img src={preloader} style={{display:\"block\", margin:\"auto\", width: \"auto\"}}/> </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Preloader; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__CBR0H\",\"item\":\"Sidebar_item__3G5gv\",\"activeLink\":\"Sidebar_activeLink__mTiUR\",\"sidebar_friends\":\"Sidebar_sidebar_friends__1nYhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2A2U5\",\"block1\":\"Header_block1__3C0z6\",\"block2\":\"Header_block2__3Y1ve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfileStatus_main__VsPGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transparent\":\"Login_transparent__apOn6\",\"form_inner\":\"Login_form_inner__3LJ3v\",\"custom_checkbox\":\"Login_custom_checkbox__3Ub4y\",\"form_control\":\"Login_form_control__1E6xy\",\"error\":\"Login_error__2grF6\",\"input\":\"Login_input__3XbcK\",\"failed_sing_in\":\"Login_failed_sing_in__TLrhc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsblock\":\"Friends_friendsblock__kVztg\",\"imageClass\":\"Friends_imageClass__19BXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2YV98\",\"postitem\":\"Post_postitem__25kxH\"};","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuthorized: state.auth.data.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\nclass RedirectComponent extends React.Component {\r\n    render () {\r\n      if(!this.props.isAuthorized) {\r\n          return <Redirect to='/login' />\r\n      } return <Component {...this.props} />\r\n    } \r\n} \r\nlet connectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\nreturn connectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","\r\n    const update_textarea_dialogs = \"update_textarea_dialogs\";\r\n    const add_message = \"add_message\";\r\n\r\n    let initialState = {\r\n        \r\n            dialog: [\r\n                { name: \"Maria\", id: \"/1\", src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\" },\r\n                { name: \"Nelii\", id: \"/2\", src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\" },\r\n                { name: \"Vova\", id: \"/3\", src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\" },\r\n                { name: \"Volodja\", id: \"/4\", src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\" },\r\n                { name: \"Kostja\", id: \"/5\", src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\" },\r\n            ],\r\n\r\n            messag: [\r\n                { mess: \"Hi\" },\r\n                { mess: \"Hello\" },\r\n                { mess: \"How are you\" },\r\n                { mess: \"I am fine\" }\r\n            ],\r\n\r\n           // updatedTextArea: \"\"\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\nlet dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch(action.type) {\r\n    /*    case update_textarea_dialogs :\r\n        return {\r\n            ...state,\r\n            updatedTextArea : action.newvalue\r\n        };\r\n*/\r\n        case add_message :\r\n        { let newmess = state.updatedTextArea; \r\n            \r\n            return {\r\n            ...state,\r\n\r\n            messag: [...state.messag, {mess: action.message}]\r\n        }\r\n    };\r\n\r\n       default: return state; \r\n    }\r\n}\r\n// export const actioncreatorUpdateTextareaDialog = (text) => ({ type: update_textarea_dialogs, newvalue: text });\r\nexport const actioncreatorAddMessage = (message) => ({ type: add_message, message });\r\n\r\nexport const sendMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch(actioncreatorAddMessage(message));\r\n    }\r\n}\r\n\r\nexport default dialogsReducer; ","import {usersApi} from \"../api/api\";\r\n\r\nconst FOLLOW = \"follow\";\r\nconst UNFOLLOW = \"unfollow\";\r\nconst SETUSERS = \"set_users\";\r\nconst SETCURRENTPAGE = \"set_current_page\";\r\nconst SETTOTALPAGESCOUNT = \"setTotalUsersCount\";\r\nconst TOGGLEISLOADING = \"toggle_is_loading\";\r\nconst SUBSCRIPTIONPROCESSED = \"while_subscription_is_being_processed\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0, //before axios.get\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    subscriptionProcessed: []\r\n}\r\n\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n            ;\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n            ;\r\n        case SETCURRENTPAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SETUSERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            };\r\n        case SETTOTALPAGESCOUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            };\r\n        case TOGGLEISLOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isloading\r\n            };\r\n        case SUBSCRIPTIONPROCESSED: {\r\n\r\n            return {\r\n                ...state,\r\n                subscriptionProcessed: action.being_processed ?\r\n                    [...state.subscriptionProcessed, action.id] :\r\n                    [...state.subscriptionProcessed.filter(id => id !== action.id)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return ({type: FOLLOW, userId})\r\n};\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SETUSERS, users});\r\nexport const toggleIsLoading = (isloading) => ({type: TOGGLEISLOADING, isloading});\r\nexport const subscriptionIsBeingProcessed = (being_processed, id) => ({\r\n    type: SUBSCRIPTIONPROCESSED,\r\n    being_processed,\r\n    id\r\n});\r\nexport const setCurrentPageUsers = (currentPage) => ({type: SETCURRENTPAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SETTOTALPAGESCOUNT, totalUsersCount});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n\r\n       let response = await usersApi.getUsers(currentPage, pageSize)\r\n            dispatch(toggleIsLoading(false));\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setCurrentPageUsers(currentPage));\r\n            dispatch(setTotalUsersCount(response.totalCount));\r\n\r\n    }\r\n}\r\n\r\nexport const unsubscribe = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(subscriptionIsBeingProcessed(true, userID));\r\n        let response = await usersApi.deleteSubscription(userID)\r\n            if (response === 0) {\r\n\r\n                dispatch(unfollow(userID));\r\n            }\r\n\r\n            dispatch(subscriptionIsBeingProcessed(false, userID));\r\n\r\n    }\r\n}\r\n\r\nexport const subscribe = (userID) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(subscriptionIsBeingProcessed(true, userID));\r\n        let response = await usersApi.getSubscription(userID)\r\n            if (response === 0) {\r\n\r\n                dispatch(follow(userID));\r\n            }\r\n        dispatch(subscriptionIsBeingProcessed(false, userID));\r\n    }\r\n}\r\n\r\nexport default usersReducer; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2qkLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3k58y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Content_profile__1VWBj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2dSc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgClass\":\"ProfileInfo_imgClass__YUukC\",\"main\":\"ProfileInfo_main__2O8T9\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport c from './Footer.module.css'\r\n\r\n\r\nconst Footer = () => {\r\n    return <div className={c.footer}>Footer</div>\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport c from './../Sidebar.module.css'\r\nimport s from './Friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n\r\n\r\nlet friendsdata = props.friends.map( f => <div>\r\n    <img className={s.imageClass} src={f.src}>\r\n    </img>\r\n    <NavLink to=\"/#\">{f.name}</NavLink>\r\n</div>)\r\n\r\n\r\n    return <div className={c.sidebar_friends}>\r\n        \r\n    <h2>Friends</h2>\r\n    <div className={s.friendsblock}>\r\n        {friendsdata}\r\n        </div>\r\n    \r\n</div>\r\n\r\n      \r\n    \r\n}\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport c from './../Sidebar.module.css'\r\n\r\nconst Menu = (props) => {\r\n    let sidebardata = props.sidebar.map(s => <div className={c.item}><NavLink to={s.path} activeClassName={c.activeLink}>{s.name}</NavLink></div> ); \r\n    return (<div className={c.sidebar}>\r\n        {sidebardata}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Menu;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport Menu from \"./Menu/Menu\";\r\nimport c from './Sidebar.module.css'\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    return (<div className={c.sidebar}>\r\n        <Menu sidebar={props.state.sidebarPage.sideb}/>\r\n       <Friends friends={props.state.sidebarPage.friends}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\n\r\n\r\nconst Music = () => {\r\n    return <div>Music</div>\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\n\r\nconst News = () => {\r\n    return <div>News</div>\r\n}\r\n\r\nexport default News;","import {usersApi, profileAPI} from \"../api/api\";\r\n\r\nconst post_textarea_changed = \"post_textarea_changed\";\r\nconst add_post = \"add_post\";\r\nconst SET_USER_PROFILE = \"setUserProfile\";\r\nconst TOGGLE_LOADING = \"page_is_loading\";\r\nconst UPDATE_USER_STATUS = \"user_status_update\";\r\nconst SET_USER_STATUS = \"set_user_status\"\r\nconst DELETE_POST = \"delete_post\";\r\nlet initialState = {\r\n\r\n    posts: [\r\n        {post: \"Hello\", id: 1},\r\n        {post: \"how are you\", id: 2},\r\n        {post: \"i am fine\", id: 3},\r\n        {post: \"i am fine\", id: 4},\r\n        {post: \"i am fine\", id: 5}\r\n    ],\r\n    // newposttext:\"\",\r\n    profile: null,\r\n    isFetching: false,\r\n    status: 'My dream is to become a good Frontend Developer'\r\n}\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        /*case post_textarea_changed: {\r\n            return {\r\n                ...state,\r\n                newposttext : action.newPostData\r\n            }\r\n        };*/\r\n        case add_post : {\r\n\r\n//  let newmessbode = state.newposttext; \r\n            return {\r\n                ...state,\r\n                // newposttext: \"\",\r\n                posts: [...state.posts, {post: action.new_post, id: 6}]\r\n            }\r\n        }\r\n            ;\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter(item => {\r\n                    return item.id != action.id\r\n                })]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE : {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n            ;\r\n        case TOGGLE_LOADING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isLoading,\r\n            }\r\n        }\r\n            ;\r\n        case UPDATE_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n            ;\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// export const actioncreatorPostTextareaChanged = (new_value) => ({ type: post_textarea_changed, newPostData: new_value });\r\nexport const actioncreatorAddPost = (new_post) => ({type: add_post, new_post});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_LOADING, isLoading});\r\nexport const deletePost = (id) => ({type: DELETE_POST, id});\r\nconst updatingUserStatus = (status) => ({type: UPDATE_USER_STATUS, status});\r\nconst setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\n\r\nexport const getCurrentUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getUserStatus(userId);\r\n        dispatch(setUserStatus(response));\r\n\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsLoading(true));\r\n        let response = await usersApi.getUserProfile(userId)\r\n\r\n        dispatch(toggleIsLoading(false));\r\n        dispatch(setUserProfile(response));\r\n\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateUserStatus(status)\r\n        if (response.resultCode === 0) {\r\n            dispatch(updatingUserStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addNewPost = (values) => {\r\n    return (dispatch) => {\r\n        dispatch(actioncreatorAddPost(values));\r\n    }\r\n}\r\n\r\nexport default profileReducer; ","import React from 'react';\r\nimport {Form, Field} from 'react-final-form';\r\n\r\nimport {addNewPost} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst MyPostsFieldForm = (props) => {\r\n\r\n    return (<div>\r\n\r\n        {/*\r\n        <textarea  onChange = { (e) => props.postareaChange(e)} placeholder=\"Enter your new post here\" value={props.newposttext}></textarea>\r\n\r\n        <div><button onClick={props.addPost}>Add Post</button>\r\n            <button>Remove</button></div>\r\n    */}\r\n        <Form\r\n            onSubmit={(values) => {\r\n\r\n                props.onSubmitForm(values.new_post);\r\n            }}\r\n            keepDirtyOnReinitialize\r\n            validate={values => {\r\n                const errors = {}\r\n                if (!values.new_post) {\r\n                    errors.new_post = \"Required\"\r\n                }\r\n\r\n                return errors;\r\n            }}\r\n            render={({handleSubmit, form}) => (\r\n                <form onSubmit={(event) => {\r\n                   \r\n\r\n       const promise = handleSubmit(event);\r\n\r\n       promise && promise.then(() => {\r\n\r\n         form.setConfig('keepDirtyOnReinitialize', false);\r\n\r\n         form.reset();\r\n\r\n         form.setConfig('keepDirtyOnReinitialize', true);\r\n\r\n       })\r\n\r\n      return promise;\r\n\r\n      }}\r\n\r\n                  >\r\n                    <div>\r\n                        <Field name=\"new_post\">\r\n                            {({input, meta}) => (\r\n                                <div>\r\n                                    <label></label>\r\n\r\n                                    <input {...input} type=\"text\" placeholder=\"Your new post\"/>\r\n                                    {/* {meta.error && meta.touched && <span>{meta.error}</span>} */}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n\r\n                        <input name={\"submit\"} type={\"submit\"} value={\"Send\"}/>\r\n                        {/* <pre>{JSON.stringify(values, 0, 2)}</pre> */}\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n\r\n    </div>)\r\n}\r\n\r\n\r\nclass MyPostsFieldFormContainer extends React.Component {\r\n    onSubmitForm = (values) => {\r\n        this.props.addNewPost(values);\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <MyPostsFieldForm onSubmitForm={this.onSubmitForm}/>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n}\r\nexport default connect(mapStateToProps, {addNewPost})(MyPostsFieldFormContainer);","import React from \"react\";\r\nimport c from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div className={c.postitem}>\r\n        <img src=\"https://static.thenounproject.com/png/31505-200.png\"></img>\r\n            <div className={c.post}>\r\n                {props.message}\r\n            </div>\r\n        <span>Like</span>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport c from './MyPosts.module.css'\r\nimport MyPostsFieldFormContainer from \"./MyPostsFieldForm\";\r\nimport Post from './Post/Post'\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    // let postareaChange = (e) => {\r\n\r\n    //     let new_value = e.target.value; \r\n    //     props.updatetextarea(new_value);\r\n    // }\r\n\r\n    // let addPost = (values) => {\r\n    //   props.updateaddPost(values.new_post);\r\n    // }\r\n    console.log(\"render\");\r\n    let postdata = props.profilePage.posts.map(p => <Post message={p.post}/>)\r\n    return <div className={c.content}>\r\n\r\n        <div><h3>My Posts</h3></div>\r\n\r\n        <MyPostsFieldFormContainer/>\r\n        {/* <textarea  onChange = {postareaChange} placeholder=\"Enter your new post here\" value={props.profilePage.newposttext}></textarea>\r\n\r\n        <div><button onClick={addPost}>Add Post</button>\r\n            <button>Remove</button></div> */}\r\n        {postdata}\r\n\r\n    </div>\r\n});\r\n\r\nexport default MyPosts;","import { actioncreatorAddPost, actioncreatorPostTextareaChanged } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updatetextarea: (new_value) => {dispatch(actioncreatorPostTextareaChanged(new_value));},\r\n      //  updateaddPost: (value) => {\r\n         //   dispatch(actioncreatorAddPost(value));\r\n        // let empty=\"\";\r\n        // dispatch(actioncreatorPostTextareaChanged(empty));\r\n      //  }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); \r\nexport default MyPostsContainer;","import React from 'react';\r\nimport c from './ProfileStatus.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode() {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n\r\n    handleKey(e) {\r\n        if (e.charCode === 13 || e.keyCode === 13) {\r\n\r\n            this.deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    updateInputArea(e) {\r\n        this.setState({\r\n            status: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.status != prevProps.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div className={c.main}>\r\n            {!this.state.editMode ?\r\n                <div><p onDoubleClick={this.activateEditMode.bind(this)}>{this.props.status || \"Enter your status\"}</p>\r\n                </div> :\r\n                <div><p><input onChange={this.updateInputArea.bind(this)} autoFocus=\"true\"\r\n                               onKeyPress={this.handleKey.bind(this)} onBlur={this.deactivateEditMode.bind(this)}\r\n                               type=\"text\" maxlength=\"300\" value={this.state.status}/></p></div>\r\n            }\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ProfileStatus; ","import React, {useEffect, useState} from 'react';\r\nimport c from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n let [editMode, setEditMode] = useState(false);\r\n let [status, setStatus] = useState(props.status);\r\n\r\n useEffect( ()=> {   // executed after the component did mount. to check if props.status === status in state\r\n     setStatus(props.status);\r\n }, [props.status]);\r\n \r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    let handleKey = (e) =>  {\r\n        if(e.charCode === 13 || e.keyCode === 13) {\r\n\r\n            deactivateEditMode();\r\n        }\r\n    }\r\n    let updateInputArea =(e) => {\r\n\r\n       setStatus(e.target.value)\r\n    }\r\n\r\n\r\n   {\r\n       return( <div className={c.main}>\r\n           {!editMode ?  <div> <p onDoubleClick={activateEditMode}>{props.status  || \"Enter your status\"}</p>\r\n        </div>: \r\n        <div><p><input onChange={updateInputArea} autoFocus=\"true\" onKeyPress={handleKey} onBlur={deactivateEditMode}\r\n        type=\"text\" maxlength=\"300\" value={status}/></p></div>\r\n    }\r\n\r\n\r\n    \r\n    </div>)}\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from \"react\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport c from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHook from \"./ProfileStatusHook\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    let loogking_for_a_job = (status) => {\r\n    return (props.profile.lookingForAJob) ? null : null; \r\n    } \r\n    \r\n    return <div className={c.main}>\r\n        {/* <img className={c.imgClass} src=\"https://kidpassage.com/images/publications/tenerife-v-mae-k-teplyim-beregam/tenerife-mae-otdyh-pogoda-1_1063346845.jpg\"></img> */}\r\n        <div>{props.profile.fullName}</div>\r\n        <div><img style={{width:\"15%\"}} title=\"userPhoto\" alt=\"userPhoto\" src={props.profile.photos.small} /></div>\r\n        {/*Status*/}\r\n\r\n        <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        <ProfileStatusWithHook status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        <div>{props.profile.aboutMe}</div>\r\n        <div>\r\n            <span>{loogking_for_a_job()}</span>\r\n            <span>{props.profile.lookingForAJobDescription}</span>\r\n        </div>\r\n        <div>\r\n            <h5>Contacts</h5>\r\n            <ul>\r\n                \r\n                <li>Facebook: {props.profile.contacts.facebook}</li>\r\n                <li>Github: {props.profile.contacts.github}</li>\r\n                <li>Instagram: {props.profile.contacts.instagram}</li>\r\n                <li>MainLink: {props.profile.contacts.mainLink}</li>\r\n                <li>Twitter: {props.profile.contacts.twitter}</li>\r\n                <li>VK: {props.profile.contacts.vk}</li>\r\n                <li>Website: {props.profile.contacts.website}</li>\r\n                <li>Youtube: {props.profile.contacts.youtube}</li>\r\n            </ul>\r\n        </div>\r\n        </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport c from './Content.module.css'\r\nimport MyPostsContainer from \"./MyPosts/MyPosts_Container\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Content = (props) => {\r\n\r\n    \r\n    return <div className={c.profile}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        <MyPostsContainer store={props.store}/>\r\n        </div>\r\n}\r\n\r\nexport default Content;","import React from \"react\";\r\nimport Content from \"./Content\";\r\nimport { connect } from \"react-redux\";\r\nimport {getUserProfile, updateUserStatus, getCurrentUserStatus} from \"./../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {withAuthRedirectComponent} from \"../Redirect/withAuthRedirectComponent\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nclass Content_Container extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId && this.props.isAuth) {\r\n            userId= this.props.authorized_userId; \r\n        }\r\n        this.props.getUserProfile(userId);\r\n\r\n        this.props.getCurrentUserStatus(userId);\r\n\r\n    }\r\n \r\n    render () {\r\n        \r\n        return (<div>\r\n       <Content {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorized_userId: state.auth.data.userId,\r\n    isAuth: state.auth.data.isAuth\r\n}); \r\n\r\nexport default  compose(connect(mapStateToProps, {getUserProfile, updateUserStatus, getCurrentUserStatus}),\r\nwithRouter,\r\nwithAuthRedirectComponent)\r\n(Content_Container)\r\n\r\n//  let authorizedComponent = withAuthRedirectComponent(Content_Container);\r\n// let withRouter_Content_Container = withRouter(authorizedComponent);\r\n// export default  connect(mapStateToProps, {getUserProfile})(withRouter_Content_Container);","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport c from './Header.module.css'\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    return <div className={c.header}>\r\n\r\n        <div className={c.block1}><img src=\"https://image.freepik.com/free-vector/abstract-people-logo_23-2147493307.jpg\"></img></div>\r\n    <div className={c.block2}>\r\n        {props.isAuthorized ?<div><p>Logged in as {props.login} <button onClick={props.singOutLogin}>Sign Out</button> </p></div> :<NavLink className={c.linkstyle} to=\"/login\">Login</NavLink>}\r\n        </div>\r\n    \r\n    </div>\r\n}\r\n\r\nexport default Header;","import {authAPI, loginAPI} from \"../api/api\";\r\n\r\n\r\nconst SETUSERSTATE = \"set_user_auth_state\";\r\nconst TOGGLELOGINLOADING = \"toggle_is_loading_login\";\r\nconst SIGN_ME_IN = \"signing_in\";\r\nconst LOGIN_FAILED = \"log_fail\";\r\n\r\nlet initialState = {\r\n    data: {\r\n        userId: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false\r\n    },\r\n    isFetching: false,\r\n    login_failed: null\r\n    // isAuthorized: false\r\n    // loginId: null\r\n}\r\n\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SETUSERSTATE: {\r\n\r\n            return {\r\n                ...state,\r\n                data: {...action.payload},\r\n                login_failed: action.login_failed\r\n            }\r\n        }\r\n            ;\r\n        case TOGGLELOGINLOADING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n            ;\r\n        case SIGN_ME_IN: {\r\n            return {\r\n                ...state,\r\n                loginId: action.userId\r\n            }\r\n        }\r\n            ;\r\n        case LOGIN_FAILED : {\r\n            return {\r\n                ...state,\r\n                login_failed: action.login_failed\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, login_failed) => ({\r\n    type: SETUSERSTATE,\r\n    payload: {userId, email, login, isAuth, login_failed}\r\n});\r\nexport const toggleIsLoadingLogin = (isFetching) => ({type: TOGGLELOGINLOADING, isFetching});\r\nconst toggle_failed_login = (login_failed) => ({type: LOGIN_FAILED, login_failed});\r\n\r\nexport const singInProcessCheck = () => {\r\n    return async  (dispatch) => {\r\n        dispatch(toggleIsLoadingLogin(true));\r\n\r\n        let response = await authAPI.getLoginData()\r\n            dispatch(toggleIsLoadingLogin(false));\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true, false));\r\n            } else console.log(\"error no login\")\r\n    }\r\n\r\n};\r\n\r\nexport const singInLogin = (values) => {\r\n    return async (dispatch) => {\r\n\r\n        if (!values.remember_me) {\r\n            values = {...values, remember_me: false};\r\n        }\r\n       let response = await loginAPI.signInData(values)\r\n           if (response.data.resultCode === 0) {\r\n               // dispatch(setLogin(response.data.userId));\r\n               dispatch(singInProcessCheck());\r\n           } else {\r\n               dispatch(toggle_failed_login(true));\r\n           }\r\n    }\r\n};\r\n\r\nexport const singOutLogin = () => {\r\n    return async (dispatch) => {\r\n        let response = await loginAPI.signOutData();\r\n        if (response.data.resultCode === 0) {\r\n            // dispatch(setLogin(response.data.userId)); \r\n            dispatch(setAuthUserData(null, null, null, false, null));\r\n        } else {\r\n            alert(\"No sign out\");\r\n            console.log(\"no sign out\")\r\n        }\r\n    }\r\n};\r\n\r\nexport default authReducer; ","\r\nimport React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {singOutLogin} from \"../../redux/authReducer\";\r\n\r\n\r\nclass Header_Container extends React.Component {\r\n  \r\n    render () {\r\n        return (<>\r\n            {this.props.isFetching ? <Preloader /> : <Header {...this.props}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) =>( {\r\n    login: state.auth.data.login,\r\n    isFetching: state.auth.isFetching,\r\n    isAuthorized: state.auth.data.isAuth\r\n\r\n})\r\nexport default connect(mapStateToProps, {singOutLogin})(Header_Container);","import React from 'react';\r\nimport c from './Login.module.css';\r\nimport { Form, Field } from 'react-final-form';\r\nimport {singInLogin } from '../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const LoginForm = (props) => {\r\n    return (\r\n    <Form\r\n    onSubmit={ (values) =>  {\r\n\r\n        props.onSubmitForm(values);\r\n        }}\r\n\r\n    validate={values => {\r\n        const errors ={}\r\n        if (!values.login) {\r\n            errors.login =\"Required\"\r\n        }\r\n        if(!values.password){\r\n            errors.password =\"Required\"\r\n        }\r\n        return errors; \r\n    }}\r\n    render={({ handleSubmit, form, meta, submitting, pristine, values}) => (\r\n            <form onSubmit={handleSubmit} className={c.transparent}>\r\n                <div className={c.form_inner}>\r\n                   {/* //  + ' ' + (meta.error && meta.touched ? c.error_style: \" \") */}\r\n                    \r\n                <h3>Sign In</h3>\r\n                { props.login_failed ? <p className={c.failed_sing_in}>Sign in failed. Wrong E-Mail or password</p> : null}\r\n                    <Field name=\"login\">\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>Login</label>\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                <input {...input} type=\"text\" placeholder=\"Login\" />\r\n                \r\n              </div>\r\n            )}\r\n          </Field>\r\n          <Field name=\"password\" >\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>Password</label>\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                <input {...input} type=\"password\" placeholder=\"Password\" />\r\n                \r\n              </div>\r\n            )}\r\n          </Field>\r\n          <label>\r\n                    <Field\r\n                  name=\"remember_me\"\r\n                  component=\"input\"\r\n                  type=\"checkbox\"\r\n                  value={true}\r\n                  id={\"custom_checkbox\"}\r\n                />{' '}\r\n                remember me\r\n              </label>\r\n                    <input  name={\"submit\"} type={\"submit\"} value={\"submit\"}/>\r\n                    {/* <button\r\n              type=\"button\"\r\n              onClick={form.reset}\r\n              disabled={submitting || pristine}\r\n            >\r\n              Reset\r\n            </button> */}\r\n            {/* <pre>{JSON.stringify(values, 0, 2)}</pre> */}\r\n                </div>\r\n            </form>\r\n             )}\r\n             />\r\n    )\r\n}\r\n\r\n// class Login extends React.Component {\r\n//     onSubmitForm = (values) => {\r\n//       debugger;\r\n//         this.props.singInLogin(values); \r\n//         // if(this.props.isAuth) {\r\n//         //   debugger; \r\n//         //  return <Redirect to={\"/profile\"} />\r\n//         // }\r\n       \r\n//         setTimeout(() => {this.redir()}, 6000); \r\n//     }\r\n\r\n//   redir = () => {\r\n//     if(this.props.isAuth) {\r\n//       return <Redirect from=\"/login\" to=\"/profile\" />\r\n//     }\r\n    \r\n//   }\r\n//     render () {\r\n//         return (\r\n//             <div>\r\n// {/* \r\n//             {this.props.isAuth ? <Redirect from=\"/login\" to=\"/profile\" /> : <LoginForm onSubmitForm={this.onSubmitForm}/> } */}\r\n// <LoginForm onSubmitForm={this.onSubmitForm}/>\r\n//         </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nconst Login = (props) => {\r\n  let onSubmitForm = (values) => {\r\n      props.singInLogin(values); \r\n\r\n  }\r\n  if(props.isAuth) {\r\n    return <Redirect from=\"/login\" to=\"/profile\" />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <LoginForm onSubmitForm={onSubmitForm} login_failed={props.login_failed}/>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n isAuth: state.auth.data.isAuth,\r\n login_failed: state.auth.login_failed\r\n})\r\n\r\nexport default connect(mapStateToProps, {singInLogin})(Login); \r\n","import {singInProcessCheck} from \"./authReducer\";\r\n\r\nconst INITILIZATION_SUCCESFULL = \"init_app\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport let appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITILIZATION_SUCCESFULL: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initial_status = () => ({type: INITILIZATION_SUCCESFULL});\r\n\r\nexport const initialization_App = () => {\r\n\r\n    return (dispatch) => {\r\n        let promise = dispatch(singInProcessCheck());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                    dispatch(initial_status());\r\n                }\r\n            );\r\n    }\r\n}","\r\n\r\n\r\nlet initialState = {\r\n    sideb: [\r\n        { path: \"/profile\", name: \"Profile\" },\r\n        { path: \"/messages\", name: \"Messages\" },\r\n        { path: \"/news\", name: \"News\" },\r\n        { path: \"/music\", name: \"Music\" },\r\n        { path: \"/settings\", name: \"Settings\" },\r\n        { path: \"/users\", name: \"Find more friends\" }\r\n    ],\r\n\r\n    friends: [\r\n        { src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\", name: \"Maria\" },\r\n        { src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\", name: \"Julia\" },\r\n        { src: \"https://trikky.ru/wp-content/blogs.dir/1/files/2020/03/29/avatarka.jpg\", name: \"Katja\" }\r\n\r\n    ]\r\n}; \r\n\r\nlet sidebarReducer =(state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer; ","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        messagesPage: dialogsReducer,\r\n        sidebarPage : sidebarReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        appMain: appReducer\r\n    }\r\n)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store; \r\nexport default store; ","import React, {Suspense} from \"react\";\nimport c from './App.module.css';\nimport Footer from './components/Footer/Footer'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\n// import Dialogs_Container from \"./components/Dialogs/Dialogs_Container\";\n// import UsersApiComponent from \"./components/Users/Users_Container\";\nimport Content_Container from \"./components/Content/Content_Container\";\nimport Header_Container from \"./components/Header/Header_Container\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialization_App} from \"./redux/appReducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport store from \"./redux/redux_store\";\n\nconst Dialogs_Container = React.lazy(() => import(\"./components/Dialogs/Dialogs_Container\"));\nconst UsersApiComponent = React.lazy(() => import(\"./components/Users/Users_Container\"));\n\nclass App extends React.Component {\n    componentDidMount = () => {\n\n        this.props.initialization_App();\n    }\n\n    render() {\n        if (!this.props.initialized_app) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className={c.App}>\n                <Header_Container/>\n\n                <Sidebar state={this.props.state}/>\n                <Route path=\"/profile/:userId?\" render={() => <Content_Container/>}/>\n                <Route path=\"/news\" render={() => <News/>}/>\n                <Route path=\"/music\" render={() => <Music/>}/>\n                <Suspense fallback={<Preloader/>}><Route path=\"/users\" render={() => <UsersApiComponent/>}/></Suspense>\n                <Suspense fallback={<Preloader/>}><Route path=\"/messages\"\n                                                         render={() => <Dialogs_Container/>}/></Suspense>\n                <Route path=\"/login\" render={() => <Login/>}/>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    state: state,\n    initialized_app: state.appMain.initialized\n})\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {initialization_App}))(App);\nconst SocialNetworkApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SocialNetworkApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport SocialNetworkApp from \"./App\";\n\n\nexport let rerenderEntireTree = () => {\n  ReactDOM.render(<SocialNetworkApp/>, document.getElementById('root'));\n  reportWebVitals();\n}\nrerenderEntireTree(); \n"],"sourceRoot":""}